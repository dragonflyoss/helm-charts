{{- if .Values.dfdaemon.enable }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "dragonfly.dfdaemon.fullname" . }}
  labels:
    app: {{ template "dragonfly.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.dfdaemon.name }}
data:
  dfget.yaml: |-
    aliveTime: {{ .Values.dfdaemon.config.aliveTime }}
    gcInterval: {{ .Values.dfdaemon.config.gcInterval }}
    keepStorage: {{ .Values.dfdaemon.config.keepStorage }}
    workHome: {{ .Values.dfdaemon.config.workHome }}
    cacheDir: {{ .Values.dfdaemon.config.cacheDir }}
    dataDir: {{ .Values.dfdaemon.config.dataDir }}
    logDir: {{ .Values.dfdaemon.config.logDir }}
    verbose: {{ .Values.dfdaemon.config.verbose }}
    {{- if .Values.dfdaemon.config.verbose }}
    pprof-port: {{ .Values.dfdaemon.config.pprofPort }}
    {{- end }}
    {{- if .Values.dfdaemon.config.jaeger }}
    jaeger: {{ .Values.dfdaemon.config.jaeger }}
    {{- else if .Values.jaeger.enable }}
    jaeger: http://jaeger-all-in-one-collector.{{ $.Release.Namespace }}.svc.{{ $.Values.clusterDomain }}:14268/api/traces
    {{- end }}
    scheduler:
      manager:
        enable: {{ .Values.dfdaemon.config.scheduler.manager.enable }}
        netAddrs:
        {{- if and (.Values.dfdaemon.config.scheduler.manager.enable) (.Values.dfdaemon.config.scheduler.manager.netAddrs) }}
{{ toYaml .Values.dfdaemon.config.scheduler.manager.netAddrs | indent 10 }}
        {{- else if .Values.manager.enable }}
        - type: tcp
          addr: {{ template "dragonfly.manager.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.manager.grpcPort }}
        {{- else }}
        - type: tcp
          addr: {{ .Values.externalManager.host }}:{{ .Values.externalManager.grpcPort }}
        {{- end }}
        refreshInterval: {{ .Values.dfdaemon.config.scheduler.manager.refreshInterval }}
      scheduleTimeout: {{ .Values.dfdaemon.config.scheduler.scheduleTimeout }}
      disableAutoBackSource: {{ .Values.dfdaemon.config.scheduler.disableAutoBackSource }}
    host:
{{ toYaml .Values.dfdaemon.config.host | indent 6 }}
    download:
{{ toYaml .Values.dfdaemon.config.download | indent 6 }}
    upload:
{{ toYaml .Values.dfdaemon.config.upload | indent 6 }}
    storage:
{{ toYaml .Values.dfdaemon.config.storage | indent 6 }}
    proxy:
      defaultFilter: {{ .Values.dfdaemon.config.proxy.defaultFilter }}
      tcpListen:
    {{- if not .Values.dfdaemon.hostNetwork }}
        namespace: {{ .Values.dfdaemon.config.proxy.tcpListen.namespace }}
    {{- end }}
        listen: {{ .Values.dfdaemon.config.proxy.tcpListen.listen }}
        port: {{ .Values.dfdaemon.containerPort }}
      security:
{{ toYaml .Values.dfdaemon.config.proxy.security | indent 8 }}
      registryMirror:
{{ toYaml .Values.dfdaemon.config.proxy.registryMirror | indent 8 }}
      proxies:
{{ toYaml .Values.dfdaemon.config.proxy.proxies | indent 8 }}
      {{- if .Values.containerRuntime.docker.enable }}
      hijackHTTPS:
        cert: /etc/dragonfly-ca/cacert.pem
        key: /etc/dragonfly-ca/cakey.pem
        hosts:
        - regx: .*
          insecure: {{ .Values.containerRuntime.docker.insecure }}
        {{- if and .Values.containerRuntime.docker.injectHosts (not .Values.containerRuntime.docker.restart) }}
        sni:
        {{- range .Values.containerRuntime.docker.registryPorts }}
        - listen: 127.0.0.1
          port: {{ . }}
          {{- if not $.Values.dfdaemon.hostNetwork }}
          namespace: {{ $.Values.dfdaemon.config.proxy.tcpListen.namespace }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
{{- end }}
